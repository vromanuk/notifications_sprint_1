version: '3'

volumes:
  local_postgres_data: {}
  local_postgres_data_backups: {}
  kafka-data: {}

services:
  django: &django
    build:
      context: .
      dockerfile: compose/local/django/Dockerfile
    image: notifications_api_local_django
    container_name: django
    depends_on:
      - postgres
      - redis
    volumes:
      - .:/app:z
    env_file:
      - ./.env
    ports:
      - "8000:8000"
    command: /start

  postgres:
    build:
      context: .
      dockerfile: compose/production/postgres/Dockerfile
    image: notifications_api_production_postgres
    container_name: postgres
    volumes:
      - local_postgres_data:/var/lib/postgresql/data:Z
      - local_postgres_data_backups:/backups:z
    env_file:
      - ./.env
    ports:
      - "5432:5432"

  redis:
    image: redis:6
    container_name: redis

  celeryworker:
    <<: *django
    image: notifications_api_local_celeryworker
    container_name: celeryworker
    depends_on:
      - redis
      - postgres
    ports: []
    command: /start-celeryworker

  celerybeat:
    <<: *django
    image: notifications_api_local_celerybeat
    container_name: celerybeat
    depends_on:
      - redis
      - postgres
    ports: []
    command: /start-celerybeat

  flower:
    <<: *django
    image: notifications_api_local_flower
    container_name: flower
    ports:
      - "5555:5555"
    command: /start-flower

  zookeeper:
    image: bitnami/zookeeper:3.7.0
    container_name: zookeeper
    env_file:
      - ./.env

  kafka:
    image: bitnami/kafka:3.0.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - 9093:9093
    volumes:
      - kafka-data:/data/kafka/
    env_file:
      - ./.env

  kafka-consumer:
    <<: *django
    image: notifications_api_local_kafka-consumer
    container_name: kafka-consumer
    depends_on:
      - kafka
      - zookeeper
    ports: [ ]
    restart: on-failure
    command: /start-kafka-consumer
    env_file:
      - ./.env
